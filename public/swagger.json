{
  "openapi": "3.0.0",
  "info": {
    "title": "DPS Ghaziabad API Documentation",
    "description": "Completely automated API documentation with dynamic schema and tag generation",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "error"
          },
          "message": {
            "type": "string",
            "example": "Error message"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string",
            "example": "Operation successful"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Class": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "school_id": {
            "type": "integer",
            "example": 10
          },
          "class_name": {
            "type": "string",
            "example": "10th Grade"
          },
          "sort_name": {
            "type": "string",
            "example": "X"
          },
          "other_name": {
            "type": "string",
            "example": "Senior Secondary"
          },
          "cps_class_name": {
            "type": "string",
            "example": "CPS10"
          }
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "department_name": {
            "type": "string",
            "example": "Human Resources"
          }
        }
      },
      "DepartmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 10
          },
          "type_name": {
            "type": "string",
            "example": "Academic"
          }
        }
      },
      "Designation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Senior Developer"
          },
          "description": {
            "type": "string",
            "example": "Responsible for backend development"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-09T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2025-06-10T12:00:00Z"
          }
        }
      },
      "Eligibility Test": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 45
          },
          "class_id": {
            "type": "integer",
            "example": 3
          },
          "section_id": {
            "type": "integer",
            "example": 7
          },
          "file_name": {
            "type": "string",
            "example": "EligibilityTest_Math_9A.pdf"
          },
          "file_path": {
            "type": "string",
            "example": "/uploads/tests/EligibilityTest_Math_9A.pdf"
          },
          "created_by": {
            "type": "integer",
            "example": 1
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Role": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "role_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "School": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "school_name": {
            "type": "string"
          },
          "sort_name": {
            "type": "string"
          },
          "abbr": {
            "type": "string"
          },
          "gr_name": {
            "type": "string"
          },
          "sub_name": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "ci": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Class Sections": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "class_id": {
            "type": "integer"
          },
          "Class Sections_name": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "paths": {
    "/api/v1/classes/list": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get all classes with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of classes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "example": 100
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 10
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Class"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/classes/search/{key}/{value}": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Search classes by key and value",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "school_id",
                "class_name",
                "sort_name",
                "other_name",
                "cps_class_name"
              ]
            },
            "description": "Key to search by"
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Class"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No classes found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "No data found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/classes/{id}": {
      "get": {
        "tags": [
          "Classes"
        ],
        "summary": "Get class by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Class ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Class details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Class"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Class not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Class not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/list": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get all departments with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of departments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "example": 50
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 5
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Department"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/type/list": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get all department types",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of department types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DepartmentType"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/type/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get department type by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Department type ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Department type details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/DepartmentType"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Department type not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Department type not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/search/{key}/{value}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Search department by key and value",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "department_name"
              ]
            },
            "description": "Key to search by"
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Department"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No matching departments found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "No data found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get department by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Department ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Department details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Department"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Department not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designations/list": {
      "get": {
        "tags": [
          "Designation"
        ],
        "summary": "Get all designations with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of designations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "example": 50
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 5
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Designation"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/designations/{id}": {
      "get": {
        "tags": [
          "Designation"
        ],
        "summary": "Get designation by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Designation ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Designation details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/Designation"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Designation not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": false
                    },
                    "message": {
                      "type": "string",
                      "example": "Designation not found"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eligibility-test/list": {
      "get": {
        "tags": [
          "Eligibility Test"
        ],
        "summary": "Get all eligibility tests with pagination",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of eligibility tests with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "example": 42
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 5
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Eligibility Test"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/eligibility-test/create": {
      "post": {
        "tags": [
          "Eligibility Test"
        ],
        "summary": "Create a new eligibility test",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "classId",
                  "sectionId",
                  "fileName",
                  "filePath"
                ],
                "properties": {
                  "classId": {
                    "type": "integer",
                    "example": 3
                  },
                  "sectionId": {
                    "type": "integer",
                    "example": 7
                  },
                  "fileName": {
                    "type": "string",
                    "example": "EligibilityTest_Math_9A.pdf"
                  },
                  "filePath": {
                    "type": "string",
                    "example": "/uploads/tests/EligibilityTest_Math_9A.pdf"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Eligibility test created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Eligibility Test created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "EligibilityTestId": {
                          "type": "integer",
                          "example": 45
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/eligibility-test/{id}": {
      "get": {
        "tags": [
          "Eligibility Test"
        ],
        "summary": "Get eligibility test by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the eligibility test"
          }
        ],
        "responses": {
          "200": {
            "description": "Eligibility test found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Eligibility Test"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Eligibility test not found"
          }
        }
      }
    },
    "/api/v1/roles/list": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all roles (paginated)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of roles with pagination metadata",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "example": 50
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 5
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "ID of the role"
          }
        ],
        "responses": {
          "200": {
            "description": "Role data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Role"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Role not found"
          }
        }
      }
    },
    "/api/v1/school/list": {
      "get": {
        "tags": [
          "School"
        ],
        "summary": "Get all schools",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of users per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of schools",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/School"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/school/search/{key}/{value}": {
      "get": {
        "tags": [
          "School"
        ],
        "summary": "Search schools by key and value",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "school_name",
                "sort_name",
                "abbr",
                "gr_name",
                "sub_name",
                "state",
                "ci",
                "full_name"
              ]
            },
            "description": "Field to search on"
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Matching school(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/School"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid search key"
          },
          "404": {
            "description": "No matching records found"
          }
        }
      }
    },
    "/api/v1/school/{id}": {
      "get": {
        "tags": [
          "School"
        ],
        "summary": "Get school by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "School ID"
          }
        ],
        "responses": {
          "200": {
            "description": "School data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/School"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "School not found"
          }
        }
      }
    },
    "/api/v1/sections/list": {
      "get": {
        "tags": [
          "Class Sections"
        ],
        "summary": "Get all class sections",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of records per page"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sections",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "total": {
                      "type": "integer",
                      "example": 42
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 5
                    },
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sections/{id}": {
      "get": {
        "tags": [
          "Class Sections"
        ],
        "summary": "Get a section by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Section ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Section data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Class Sections"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Section not found"
          }
        }
      }
    },
    "/api/v1/sections/class/{id}": {
      "get": {
        "tags": [
          "Class Sections"
        ],
        "summary": "Get sections by class ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "Class ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of sections for the class",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Class Sections"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "No sections found"
          }
        }
      }
    },
    "/api/v1/sections/search/{key}/{value}": {
      "get": {
        "tags": [
          "Class Sections"
        ],
        "summary": "Search sections by key and value",
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "class_id",
                "Class Sections_name"
              ]
            }
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matching section(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Class Sections"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid search key"
          },
          "404": {
            "description": "No data found"
          }
        }
      }
    },
    "/api/v1/upload/{folderName}": {
      "post": {
        "tags": [
          "Files"
        ],
        "summary": "Upload multiple files to a specified folder",
        "description": "Upload files to the server under the specified folder. Supports overwrite and optional thumbnail generation.",
        "parameters": [
          {
            "in": "path",
            "name": "folderName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Target folder name"
          },
          {
            "in": "query",
            "name": "overwrite",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            },
            "description": "Overwrite existing files"
          },
          {
            "in": "query",
            "name": "generateThumbnail",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ]
            },
            "description": "Generate thumbnail for images"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upload success"
          }
        }
      }
    },
    "/api/v1/upload/delete/{fileName}": {
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Delete a file and optionally its thumbnail",
        "description": "Deletes the specified file from the server. Optionally deletes the thumbnail if `deleteThumbnail=true`.",
        "parameters": [
          {
            "in": "path",
            "name": "fileName",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Name of the file to delete (e.g., sample.jpg)"
          },
          {
            "in": "query",
            "name": "deleteThumbnail",
            "schema": {
              "type": "string",
              "enum": [
                true,
                false
              ],
              "default": true
            },
            "description": "Whether to also delete the thumbnail image"
          }
        ],
        "responses": {
          "200": {
            "description": "File deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "File deleted successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "fileName": {
                          "type": "string",
                          "example": "sample.jpg"
                        },
                        "folder": {
                          "type": "string",
                          "example": "uploads"
                        },
                        "deletedAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing file name"
          },
          "404": {
            "description": "File not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/users/profile": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get current user's profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update current user's profile",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Profile updated"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/users/list": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all users (Admin only)",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number for pagination"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "default": 10
            },
            "description": "Number of users per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              },
                              "role": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string"
                              },
                              "last_login": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - only accessible by admins"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v1/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User data"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/v1/users/search/{key}/{value}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Search users by key and value",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "key",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "id",
                "school_id",
                "class_name",
                "sort_name",
                "other_name",
                "cps_class_name"
              ]
            },
            "description": "Search key field  *id, school_id, class_name, sort_name, other_name, cps_class_name*"
          },
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Value to search for"
          }
        ],
        "responses": {
          "200": {
            "description": "Matching users"
          },
          "400": {
            "description": "Invalid search criteria"
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "type": "string",
                    "example": "johndoe"
                  },
                  "password": {
                    "type": "string",
                    "example": "secret123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/v1/serverinfo/heath": {
      "get": {
        "tags": [
          "Server Info"
        ],
        "summary": "Check server health status",
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "OK"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/serverinfo/matrix": {
      "get": {
        "tags": [
          "Server Info"
        ],
        "summary": "Get server metrics",
        "responses": {
          "200": {
            "description": "Metrics data returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "uptime": 10234,
                    "memoryUsage": {
                      "rss": 12345678,
                      "heapTotal": 9876543,
                      "heapUsed": 8765432
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "School",
      "description": "Endpoints for managing school data"
    },
    {
      "name": "Class Sections",
      "description": "Endpoints for managing class sections"
    },
    {
      "name": "Files",
      "description": "File management and operations"
    },
    {
      "name": "Users",
      "description": "User management and profile operations"
    },
    {
      "name": "Auth",
      "description": "Authentication related endpoints"
    },
    {
      "name": "Server Info",
      "description": "Server health and metrics endpoints"
    }
  ]
}